name: CI

on:
    push:
        branches: [main, staging]
    pull_request:
        branches: [main, staging]

jobs:
    build:
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:8.0
                ports:
                    - 3306:3306
                env:
                    MYSQL_USER: appuser
                    MYSQL_PASSWORD: secret
                    MYSQL_ROOT_PASSWORD: password
                    MYSQL_DATABASE: database
                options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Cache Composer packages
              id: composer-cache
              uses: actions/cache@v2
              with:
                  path: vendor
                  key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-php-

            - name: Install dependencies
              run: composer install --no-interaction --no-ansi --prefer-dist --no-progress

            - name: Acquire .env
              run: cp .env.ci .env

            - if: hashFiles('app/Providers/MicroserviceRegistryProvider.php') == ''
              name: Copy microservice registry stub to providers
              run: cp app/Providers/Stub/MicroserviceRegistryProvider.stub app/Providers/MicroserviceRegistryProvider.php

            - name: Generate RSA keys
              run: |
                  ssh-keygen -t rsa -N "" -f temp -m pkcs8
                  ssh-keygen -f temp.pub -e -m pkcs8 > oauth.pub
                  mv temp oauth-private.key
                  mv oauth.pub oauth-public.key
                  rm temp.pub
              working-directory: storage/keys

            - name: Run migrations and seeders
              run: php artisan migrate:fresh --seed

            - name: Run lint
              run: composer lint

            - name: Run test
              run: composer test
              env:
                  JWT_PUBLIC_KEY: file://${{ github.workspace }}/storage/keys/oauth-public.key
                  JWT_PRIVATE_KEY: file://${{ github.workspace }}/storage/keys/oauth-private.key
